import{t as r}from"./assets/template-functions-2eed998b.js";import{a as e}from"./assets/vendor-0cb09735.js";class a{constructor(){this.BASE_URL="https://books-backend.p.goit.global/books/",e.defaults.baseURL=this.BASE_URL}async getCategoryList(){return(await e.get("category-list")).data}async getTopBooks(){return(await e.get("top-books")).data}async getBooksByCategory(t){const s=new URLSearchParams({category:t});return(await e.get("category",{params:s})).data}async getBookById(t){return(await e.get(`${t}`)).data}}const n=new a,c=document.querySelector(".books-wrapper");function i(o,t){const s=r(t);o.insertAdjacentHTML("beforeend",s)}async function g(){try{const o=await n.getTopBooks();console.log(o),i(c,o)}catch(o){console.log(o)}}g();const l=new a;async function y(o){const t=await l.getBooksByCategory(o);console.log(t),localStorage.setItem("saved-books",JSON.stringify(t))}y("Audio Fiction");const k=new a,p=document.querySelector(".sidebar-categories-name");document.querySelector(".scrolling-line");async function d(){try{const o=await k.getCategoryList();p.insertAdjacentHTML("beforeend",o.map(t=>m(t)).join(""))}catch(o){console.error("Error fetching category list:",o.message)}}function m({list_name:o}){return`<li class="sb-category-item">
            <a href="#" data-category="${o}">${o}</a>
          </li>`}d();
//# sourceMappingURL=commonHelpers.js.map
